<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="_EntityEnd" Id="{d4cdb8ce-e0b4-4dce-8c30-d850459101b3}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION INTERNAL _EntityEnd : Result
VAR
	iEntity: I_Entity;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Check if the runtime system is initialized
IF NOT _Runtime.bInit THEN
    // If not initialized, return with an initialization error
    _EntityEnd := Err.Init;
    RETURN;
END_IF

// Check if there is an entity currently under construction
IF _Ec.iUnderConstruction = 0 THEN
    // If no entity is under construction, return with interface error
    _EntityEnd := Err.Itf0;
    RETURN;
END_IF

// Mark the current under-construction entity as completed
_Ec.iUnderConstruction._State := _EntityState.Completed;

// Decrement the count of constructed scopes
_Ec.nConstructedScopes := _Ec.nConstructedScopes - 1;

// If there are still scopes left to complete
IF _Ec.nConstructedScopes > 0 THEN
    // Traverse backwards to find an entity that is registered but not yet completed
	iEntity := _Ec.iUnderConstruction;
    WHILE IsOk(GetPrevEntity(iEntity)) DO
        // If a registered entity is found, set the return value to OK and exit
        IF _Ec.iUnderConstruction._State = _EntityState.Registered THEN
            _EntityEnd := Ok;
            RETURN;
        END_IF
    END_WHILE

    // If all remaining entities are completed, reset under-construction pointer and return OK
    _Ec.iUnderConstruction := 0;
    _EntityEnd := Ok;
ELSE
    // If no scopes left, reset under-construction pointer and return OK
    _Ec.iUnderConstruction := 0;
    _EntityEnd := Ok;
END_IF
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>