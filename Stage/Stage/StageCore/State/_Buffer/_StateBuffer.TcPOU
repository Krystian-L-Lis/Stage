<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="_StateBuffer" Id="{711a25fc-792a-4435-9ccd-e8054980130d}" SpecialFunc="None">
    <Declaration><![CDATA[(*
A buffer for storing states.  
*)
FUNCTION_BLOCK INTERNAL _StateBuffer
VAR
	_iFirst				: I_State;
	_iLast				: I_State;
	_nLen				: UDINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Other" Id="{5d3df489-8735-43fe-a81c-03404c1c5f20}" />
    <Folder Name="Push" Id="{4903ac7f-b709-435c-851d-d394b1e3ffec}" />
    <Method Name="Length" Id="{264889a2-4c66-4869-80d2-31916bbd4e00}" FolderPath="Other\">
      <Declaration><![CDATA[(*
Returns the current number of states stored in the buffer.
*)
METHOD Length : UDINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Length := _nLen;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Pop" Id="{d39e1d8e-6957-40eb-ad12-24d995eb484b}" FolderPath="Push\">
      <Declaration><![CDATA[(*
Removes and retrieves the oldest state from the buffer.  

Returns:
- `Ok` - If a state is successfully removed.
- `None` - If the buffer is empty.
*)
METHOD Pop : Result
VAR_OUTPUT
	iState			: I_State;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _iFirst = 0 THEN
	Pop := None;
	RETURN;
END_IF

iState := _iFirst;
_iFirst := _iFirst._NextInBuffer;
iState._NextInBuffer := 0;
iState._InQueue := FALSE;

IF _iFirst = 0 THEN
	_iLast := 0;
END_IF

_nLen := _nLen - 1;
Pop := Ok;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Push" Id="{5955ea9d-3baf-4dfd-a5a1-a995221ac391}" FolderPath="Push\">
      <Declaration><![CDATA[(*
Adds a new state to the buffer.  
Returns:
- `Ok` - If the state is successfully added.
- `Err.Itf0` - If the provided state interface is invalid.
- `Err.IncArg` - Uf the provided state already is in some buffer.
*)
METHOD Push : Result
VAR_INPUT
	iState			: I_State;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF iState = 0 THEN
	Push := Err.Itf0;
	RETURN;
END_IF

IF iState._InQueue THEN
	Push := Err.IncArg;
	RETURN;
END_IF

IF _iLast = 0 THEN
	_iFirst := iState;
	_iLast := iState;
	iState._InQueue := TRUE;
	_nLen := _nLen + 1;
ELSE
	_iLast._NextInBuffer := iState;
	_iLast := iState;
	iState._InQueue := TRUE;
	_nLen := _nLen + 1;
END_IF

Push := Ok;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>