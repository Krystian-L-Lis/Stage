<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="Safety" Id="{52bd05de-f03c-45f8-9524-7fe271a7c3d0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Safety 
VAR_GENERIC CONSTANT
	ESTOP_CAP		: UDINT := 2;
END_VAR
IMPLEMENTS I_Execute
VAR_INPUT
	bSafetyOk		: BOOL;
	bEStopActive	: ARRAY[1..ESTOP_CAP] OF BOOL;
END_VAR
VAR_OUTPUT
	bSafetyRun		: BOOL;
	bErrAck			: BOOL;
END_VAR
VAR
	_exe			: Execute(THIS^);
	_hmi			: Safety_Hmi<ESTOP_CAP>;
	_nStep			: USINT;
	_tonTimeout		: TON;	

	_entityStart		: EntityStart;
	_tag				: Tag := (Option := 'Safety');

	_safetyEvent		: Signal;
	_bSafetyStopActive	: BoolArg(FALSE);
	
	_entityEnd			: EntityEnd;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Execute" Id="{55d13787-afea-44f7-b92a-b7b1e114eed6}">
      <Declaration><![CDATA[METHOD Execute
VAR_INPUT
	nPhase: INT;
END_VAR
VAR
	i			: UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO ESTOP_CAP DO
	_hmi.bEStopActive[i] := bESTopActive[i];
END_FOR


CASE _nStep OF
	0: // Fault Init
		_bSafetyStopActive.OpSet(TRUE);
		_safetyEvent.Emit(_bSafetyStopActive);
		bSafetyRun	:= FALSE;
		
		_nStep := 1;
		
		_hmi.bHideReset := TRUE;
		_hmi.nStatusColor := COL.RED.Raw;
		_hmi.sStatusText := 'Safety Stop Activated!';

	1: // Fault
		_hmi.bHideReset := NOT bSafetyOk;
		IF bSafetyOk AND _hmi.bReset THEN
			_hmi.bReset := FALSE;
			
			_nStep := 2;
		END_IF

	2: // Reset init
		bSafetyRun	:= TRUE;
		
		_nStep		:= 3;
		
		_hmi.bHideReset := TRUE;
		_hmi.nStatusColor := COL.RED.Raw;
		_hmi.sStatusText := 'Reset in progress...';
		
	3: // Reset
	
		bErrAck		:= TRUE;
		
		_tonTimeout(IN := TRUE, PT := T#5S);
		
		IF bSafetyOk THEN
			_tonTimeout(IN := FALSE);
			_nStep := 4;
		ELSIF _tonTimeout.Q THEN
			_tonTimeout(IN := FALSE);
			_nStep := 0;
		END_IF	

	4:	// Op Init
		bErrAck		:= FALSE;
	
		_bSafetyStopActive.OpSet(FALSE);
		_safetyEvent.Emit(_bSafetyStopActive);
		_nStep := 5;
		
		_hmi.bHideReset := TRUE;
		_hmi.nStatusColor := COL.BLACK.Raw;
		_hmi.sStatusText := 'Safety OK!';

	5:	// Op
		IF NOT bSafetyOk THEN
			_nStep := 0;
		END_IF
END_CASE
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>