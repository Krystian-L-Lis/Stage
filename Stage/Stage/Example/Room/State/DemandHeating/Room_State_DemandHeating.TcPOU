<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="Room_State_DemandHeating" Id="{0389a633-ce0e-45d1-8ffe-b5458804ca69}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Room_State_DemandHeating EXTENDS _Room_State IMPLEMENTS I_Execute
VAR
	_exe				: Execute(THIS^);
	_hmi				: Room_State_DemandHeating_Hmi;
	_tonActive			: TON;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="CanActivate" Id="{86ff272b-9274-447f-85e5-14afab09edea}">
      <Declaration><![CDATA[METHOD PROTECTED CanActivate : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CanActivate := _ctx.state.iMgr.Current = _ctx.state.iIdle;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Execute" Id="{6db6c303-2883-4848-80bb-b716126fca0e}">
      <Declaration><![CDATA[METHOD Execute
VAR_INPUT
	nPhase: INT;
END_VAR
VAR
	_iSelf		: I_State := THIS^;
	_strb		: Strb;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_strb.Set(_ctx.hmi.sData)
		.Append(' On: ').Append(strf.SimpleTime(_tonActive.ET, 'S', 'M'));

_ctx.hmi.sData := _strb.Read();

IF _ctx.state.iMgr.Current <> _ctx.state.iIdle THEN
	RETURN;
END_IF

IF _ctx.state.iMgr.Current = _iSelf THEN
	RETURN;
END_IF

IF _hmi.bDemandButton THEN
	_ctx.state.iMgr.Request(THIS^);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Init" Id="{5963c11d-cd15-4e87-a244-3534781c622c}">
      <Declaration><![CDATA[METHOD Init
VAR
	i			: Iter(1);
	_iEntity	: I_Entity;
	_iRec		: I_Receiver;
	_r			: Result;
	strb		: Strb;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[WHILE IsOk(GetNextEntity(_iEntity)) DO
	IF IsNone(HasTagOption(_iEntity, 'Heating')) THEN
		CONTINUE;
	END_IF
	
	IF IsOk(GetReceiver(_iEntity, '*._onRequest', _iRec)) THEN
		IF IsErr(_ctx.priv.iRequestEvent.Pair(_iRec), nOut => _r) THEN
			DebugMsg(_iRec, strb.Append('Cannot pair _onRequest with this receiver! Error code: ').Append(TO_STRING(_r)).Read());
		END_IF
		
		RETURN;
	END_IF
END_WHILE

DebugMsg(THIS^, strb.Append('Cannot pair _requestEvent with a ').Append('_onRequest').Append('!').Read());
DebugMsg(_iEntity, strb.Append('_onRequest').Append(' not found!').Read());]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnEntry" Id="{6de24a63-b10e-46fa-b036-c1fc69237759}">
      <Declaration><![CDATA[METHOD PROTECTED OnEntry
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_ctx.io.bOpenValves := FALSE;

_ctx.priv.bActive := TRUE;
_ctx.priv.bReady := FALSE;

_ctx.hmi.sStatusText := 'Heating ON: Scheduled demand...';
_ctx.hmi.nStatusColor := COL.BLACK.Raw;

_ctx.hmi.bHideReset := TRUE;

_tonActive(IN := FALSE);

_ctx.priv.iRequestEvent.Emit(_ctx);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{1ac3585c-789d-4477-9aa9-784a9986c68a}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[_tonActive(IN := _ctx.io.bValvesOpen, PT := UDINT_TO_TIME(_hmi.nActivationTime * 1000));
IF _ctx.hmi.bDisable THEN
	_ctx.state.iMgr.Request(_ctx.state.iDisable);
ELSIF NOT _hmi.bDemandButton THEN
	_ctx.priv.bReady := TRUE;
ELSIF _tonActive.Q THEN
	_ctx.priv.bReady := TRUE;
	_hmi.bDemandButton := FALSE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExit" Id="{b73aa6bb-78f6-4772-b297-d9f813926fb5}">
      <Declaration><![CDATA[METHOD PROTECTED OnExit
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_hmi.bDemandButton := FALSE;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>