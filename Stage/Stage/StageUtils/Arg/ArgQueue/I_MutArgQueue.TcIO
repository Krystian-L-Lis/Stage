<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <Itf Name="I_MutArgQueue" Id="{bfa254c1-b89f-4368-9efe-0eb88bf9fb59}">
    <Declaration><![CDATA[(*
A circular queue implementation for managing `I_Arg`.  
*)
INTERFACE I_MutArgQueue EXTENDS I_ArgQueue
]]></Declaration>
    <Method Name="Clear" Id="{6fd609a7-3967-4f75-96ec-8525830ce196}">
      <Declaration><![CDATA[(*
Clears the queue.
*)
METHOD Clear
]]></Declaration>
    </Method>
    <Method Name="Pop" Id="{eed13044-56a3-4d5b-b02e-6682ccb4b0d8}">
      <Declaration><![CDATA[(*
Retrieves and removes the next argument from the queue.  
Advances the tail pointer, ensuring cyclic operation within the queue's capacity.
Returns:
- Ok - Returns `I_Arg`.
- Err.NotFound - Returns null, queue empty.
- Check `I_MutArgList.Get` for more results.
*)
METHOD Pop : Result
VAR_INPUT
	iOut	: REFERENCE TO I_Arg;
END_VAR
]]></Declaration>
    </Method>
    <Method Name="Push" Id="{1c911968-2e87-47fb-b7c2-7221a23f31f4}">
      <Declaration><![CDATA[(*
Adds a new argument to the queue.  
Advances the head pointer while maintaining a cyclic structure, and returns an overflow error if the queue is full.
Returns:
- Ok - Successful insertion.
- Err.Ovf - Returns null, the queue is full.
- Check `I_MutArgList.Set` for more results.
*)
METHOD Push : Result
VAR_INPUT
	iIn		: I_Arg;
END_VAR
]]></Declaration>
    </Method>
  </Itf>
</TcPlcObject>