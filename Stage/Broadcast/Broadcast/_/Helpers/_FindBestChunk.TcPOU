<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="_FindBestChunk" Id="{bf0a026d-cc31-407d-ac75-2d22528103ba}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION INTERNAL _FindBestChunk : Results.Result
VAR_INPUT
	nRequesterId		: UDINT;
    nRequestedSize     	: UDINT;
END_VAR
VAR_OUTPUT
    nNewId             	: UDINT;
    nNewSize            : UDINT;
END_VAR
VAR
	i					: UDINT;
	j					: UDINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Loop through stEntry to find the best chunk
FOR i := 1 TO Param.nChannelSize DO
	IF _Channel.stEntry[i].iSignal <> 0 AND_THEN _Channel.stEntry[i].iSignal.id <> nRequesterId THEN
		// Skip over occupied blocks
		i := _Channel.stEntry[i].iSignal.id + _Channel.stEntry[i].iSignal.size - 1;
	ELSE
		// Start of a free chunk and measure its size
		FOR j := 0 TO Param.nChannelSize DO
			IF _Channel.stEntry[i + j].iSignal <> 0 AND_THEN _Channel.stEntry[i].iSignal.id <> nRequesterId THEN
				EXIT;
			ELSIF Param.nChannelSize <= i + j THEN
				EXIT;
			END_IF			
		END_FOR
		
		// If the chunk is smaller but still fits assign a new best fit
		IF nNewSize = 0 THEN
			nNewId := i;
			nNewSize := j + 1;
		ELSIF  nRequestedSize <= j + 1 AND_THEN nNewSize > j + 1 THEN
			nNewId := i;
			nNewSize := nRequestedSize;
		END_IF
		
		IF _Channel.stEntry[i + j].iSignal = 0 THEN
			i := i + j;
		ELSE
			i := i + j - 1;
		END_IF
		
	END_IF
END_FOR

IF nNewSize > 0 THEN
	nNewSize := nRequestedSize;
	_FindBestChunk := Results.Ok;
ELSE
	_FindBestChunk := Results.Error;
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>