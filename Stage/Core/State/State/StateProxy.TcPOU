<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="StateProxy" Id="{3adaacfd-2bb2-42d1-b426-c26bd852962c}" SpecialFunc="None">
    <Declaration><![CDATA[(*
Assigns interface pointer to interface variable upon FB_Init.
*)
FUNCTION_BLOCK StateProxy IMPLEMENTS I_Debug
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{f592e959-64f6-4f51-99ce-3f86d7875f50}">
      <Declaration><![CDATA[//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init: BOOL
VAR_INPUT
    bInitRetains: BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
    bInCopyCode: BOOL;  // TRUE: the instance will be copied to the copy code afterward (online change)   

	iState		: I_State;
	refState	: REFERENCE TO I_State;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT __ISVALIDREF(refState) THEN
	DebugMsg(THIS^, 'Ref = 0!');
	RETURN;
END_IF

IF iState = 0 THEN
	DebugMsg(THIS^, 'Itf = 0!');
	RETURN;
END_IF

IF refState <> 0 THEN
	DebugMsg(THIS^, 'Ref itf should be unassigned!');
	RETURN;
END_IF

refState := iState;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>