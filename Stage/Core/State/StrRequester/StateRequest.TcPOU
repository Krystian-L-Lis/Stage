<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="StateRequest" Id="{1174ff67-216f-49f7-bfa3-a214d77fc72c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK StateRequest
VAR
	_smgr				: I_StateManager;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{7842256e-18bc-41a2-bb4c-099db5aa1a4e}">
      <Declaration><![CDATA[//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init: BOOL
VAR_INPUT
    bInitRetains: BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
    bInCopyCode: BOOL;  // TRUE: the instance will be copied to the copy code afterward (online change)
	
	smgr		: I_StateManager;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_smgr := smgr;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Request" Id="{4fcc61b2-ac4a-43e9-89e4-a3bb8b21e6ec}">
      <Declaration><![CDATA[METHOD Request
VAR_INPUT
	sPartialIdToRequest		: Str;
END_VAR
VAR
	i			: UDINT;
	_iTag		: I_Tag;
	cmp			: TagCmp;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[WHILE Results.IsOk(_smgr.Get(i, iTag => _iTag)) DO
	i := i + 1;
	IF cmp.Set(_iTag).MatchId(sPartialIdToRequest).IsTrue() THEN
		_smgr.Request(_iTag);
		RETURN;			
	END_IF
END_WHILE
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>