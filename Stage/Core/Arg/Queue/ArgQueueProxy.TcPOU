<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="ArgQueueProxy" Id="{66f76e3c-4594-49f1-8ce2-1ca1008b9b74}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK ArgQueueProxy IMPLEMENTS I_Debug
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="FB_Init" Id="{08d8a2d0-30f9-4b91-b7f7-0a915cc7cc54}">
      <Declaration><![CDATA[//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init: BOOL
VAR_INPUT
    bInitRetains: BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
    bInCopyCode: BOOL;  // TRUE: the instance will be copied to the copy code afterward (online change)

	iQueue		: I_MutArgQueue;
	refQueue	: REFERENCE TO I_MutArgQueue;   
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT __ISVALIDREF(refQueue) THEN
	DebugMsg(THIS^, 'Ref = 0!');
	RETURN;
END_IF

IF iQueue = 0 THEN
	DebugMsg(THIS^, 'Itf = 0!');
	RETURN;
END_IF

IF refQueue <> 0 THEN
	DebugMsg(THIS^, 'Ref itf should be unassigned!');
	RETURN;
END_IF

refQueue := iQueue;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>