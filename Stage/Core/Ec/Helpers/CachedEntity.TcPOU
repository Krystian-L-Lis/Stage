<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="CachedEntity" Id="{a3bc54a9-d8d0-4248-bd3c-08cec694f9da}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK CachedEntity IMPLEMENTS I_Entity, I_Debug;
VAR
	_nIdx		: UDINT;
	_iRegister	: I_CompRegister;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Fb_init" Id="{8539f55c-e2a7-4dfd-8610-02959cbdb372}">
      <Declaration><![CDATA[//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init: BOOL
VAR_INPUT
    bInitRetains: BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
    bInCopyCode: BOOL;  // TRUE: the instance will be copied to the copy code afterward (online change)
	
	iRegister	: I_CompRegister;
	refCache	: REFERENCE TO UDINT;
END_VAR
VAR
	_eResult	: Result;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF iRegister = 0 THEN
	DebugMsg(THIS^, 'iRegister = 0!');
	RETURN;
END_IF

_iRegister := iRegister;

CASE _eResult := _RegisterEntity(THIS^, nIndex => _nIdx) OF 
	Ok:
		IF __ISVALIDREF(refCache) THEN
			IF refCache = 0 THEN
				refCache := _nIdx;
			ELSE
				DebugMsg(THIS^, 'refCache is already assigned!');
			END_IF
		ELSE
			DebugMsg(THIS^, 'refCache is invalid!');
		END_IF
	ELSE
		DebugMsg(THIS^, Tc2_Standard.CONCAT('_RegisterEntity(THIS^) failed with code: ', TO_STRING(_eResult)));
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get" Id="{91193c45-6ad6-4c71-9d3b-ca7f00f174dc}">
      <Declaration><![CDATA[METHOD Get : Result
VAR_INPUT
	nIndex		: UDINT;
END_VAR
VAR_OUTPUT
	iComp		: I_Component;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Get := _iRegister.Get(nIndex, iComp => iComp);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Index" Id="{febb387a-3cf5-49c1-b5ae-b17c660fbe32}">
      <Declaration><![CDATA[PROPERTY Index : UDINT]]></Declaration>
      <Get Name="Get" Id="{32584628-3b6d-434a-90f6-aa18cc94cab2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Index := _nIdx;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="RegCap" Id="{6270dd8d-2423-4b84-95fe-3ad4b86a2fa8}">
      <Declaration><![CDATA[PROPERTY RegCap : UDINT]]></Declaration>
      <Get Name="Get" Id="{d7581ebe-1030-494f-b66b-2afa260c2bc0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[RegCap := _iRegister.Cap;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="RegLen" Id="{07a1d259-605d-447d-9cf8-ce3f2baa3f39}">
      <Declaration><![CDATA[PROPERTY RegLen : UDINT]]></Declaration>
      <Get Name="Get" Id="{661aea84-0a5d-4926-82e8-14c9c14b3e00}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[RegLen := _iRegister.Length;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>