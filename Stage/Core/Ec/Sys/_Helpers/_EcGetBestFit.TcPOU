<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="_EcGetBestFit" Id="{018e02c2-3975-420c-b9bb-d6ca7dc6707d}" SpecialFunc="None">
    <Declaration><![CDATA[// ---------------------------------------------------------------------------
// FUNCTION:  _EcGetBestFit
// PURPOSE:   Searches the global _Ec.comp array for a contiguous block of
//            nRequiredSize free slots (nType=0). Starts searching near the
//            leftmost entity (iFirst). If found, returns Ok and sets (nStart,nEnd)
//            to the exact free range. If none found, returns None or an error.
// ---------------------------------------------------------------------------
FUNCTION INTERNAL _EcGetBestFit : Result
VAR_INPUT
    nRequiredSize : UDINT;
END_VAR
VAR_OUTPUT
    nStart : UDINT;
    nEnd   : UDINT;
END_VAR
VAR
    _nStartIndex : UDINT;
    i            : UDINT;
    _nChunkSize  : UDINT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// 1) If we've already allocated the maximum number of slots, no space available.
IF _Ec.nCompLen = Param.ENTITY_CAP THEN
    _EcGetBestFit := Err.Ovf;
    RETURN;
END_IF

// 2) If there are no entities at all, the entire [1..nRequiredSize] is free.
IF _Ec.iFirst = 0 THEN
    nStart := 1;
    nEnd   := nStart + nRequiredSize - 1;
    _EcGetBestFit := Ok;
    RETURN;
END_IF

// 3) If the first entity doesn't start at index 1, we may have space
//    in [1..(_Ec.iFirst._Start - 1)], else search right after iFirst._End.
IF _Ec.iFirst._Start <> 1 THEN
    _nStartIndex := 1;
ELSE
    _nStartIndex := _Ec.iFirst._End + 1;
END_IF

// 4) Scan from _nStartIndex to the end of the comp array for free slots
FOR i := _nStartIndex TO Param.ENTITY_CAP DO
    
    CASE _Ec.comp[i].nType OF

        0: // FREE slot => increment the contiguous free count
            _nChunkSize := _nChunkSize + 1;

            // If we've now accumulated enough slots, return success
            IF _nChunkSize = nRequiredSize THEN
                nStart := i - _nChunkSize + 1;
                nEnd   := i;
                _EcGetBestFit := Ok;
                RETURN;
            END_IF

        1: // An entity header => skip the entire block of this entity
            _nChunkSize := 0;
            i := _Ec.comp[i].iObj.iEntity._End;
            // Next iteration in the FOR loop will proceed from i+1

        ELSE // Any other nType => unexpected internal state
            _EcGetBestFit := Err.IncArg;
            RETURN;
    END_CASE
END_FOR

// 5) If we exit the loop, no suitable block was found
_EcGetBestFit := None;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>