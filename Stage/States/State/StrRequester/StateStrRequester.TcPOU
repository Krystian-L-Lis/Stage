<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="StateStrRequester" Id="{bd1faffa-7ae3-476a-9764-666e286be3cc}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK StateStrRequester IMPLEMENTS Rt.I_Execute
VAR_INPUT
	bRequest			: BOOL;
	sStateIdToExecute	: Strings.Str;
END_VAR
VAR
	_fbExe				: Rt.Execute(THIS^);
	_smgr				: I_StateManager;
	_rt					: Tc2_Standard.R_Trig;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Execute" Id="{ecb98564-dac7-4f72-8bb1-8bfa72ffcee5}">
      <Declaration><![CDATA[METHOD Execute
VAR
	i			: UDINT;
	_iTag		: Tags.I_Tag;
	cmp			: Tags.TagCmp;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_rt(CLK := bRequest);
IF _rt.Q THEN
	bRequest := FALSE;
	WHILE Results.IsOk(_smgr.Get(i, iTag => _iTag)) DO
		i := i + 1;
		IF cmp.Set(_iTag).MatchPrtId(sStateIdToExecute).IsOk() THEN
			_smgr.Request(_iTag);
			RETURN;			
		END_IF
	END_WHILE
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{5ecfc8ab-5fbe-4d47-b1e4-a02fe47b8524}">
      <Declaration><![CDATA[//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init: BOOL
VAR_INPUT
    bInitRetains: BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
    bInCopyCode: BOOL;  // TRUE: the instance will be copied to the copy code afterward (online change)
	
	smgr		: I_StateManager;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_smgr := smgr;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>